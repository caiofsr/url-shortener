# .github/workflows/deploy-aws.yaml
name: Build and Deploy to Elastic Beanstalk

on:
  workflow_dispatch:
  push:
    tags:
     - '**'

env:
  AWS_REGION: us-east-1
  ELASTIC_BEANSTALK_NAME: urlshortner-api
  ELASTIC_BEANSTALK_ENV_NAME: Urlshortner-api-env

jobs:
  tests:
    uses: ./.github/workflows/unit-tests.yaml

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build the Docker image
        run: docker build -t ${{ steps.login-ecr.outputs.registry }}/teddy:${{ github.run_id }} -t ${{ steps.login-ecr.outputs.registry }}/teddy:latest .

      - name: Push the Docker image to Amazon ECR
        run: docker push - all-tags ${{ steps.login-ecr.outputs.registry }}/teddy

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Generate deployment package
        run: zip deploy.zip Dockerrun.aws.json

      - name: Deploy to AWS Elastic BeanTalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.ELASTIC_BEANSTALK_NAME }}
          environment_name: ${{ env.ELASTIC_BEANSTALK_ENV_NAME }}
          version_label: ${{ env.PIPELINE_ID }}
          use_existing_version_if_available: true
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy.zip
